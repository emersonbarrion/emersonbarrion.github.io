{"version":3,"sources":["infrastructure/services/api/api.utils.js","application/store/selectionsSlice.js","application/store/marketGroupsSlice.js","application/store/marketsSlice.js","application/store/eventsSlice.js","infrastructure/services/api/eventsTable.api.js","presentation/config/marketGroup.config.js","presentation/components/EventsTable/EventsTable.js","presentation/components/Selection/index.js","presentation/components/Selection/Selection.template.js","presentation/components/Selection/Selection.js","presentation/components/Market/Market.js","presentation/components/Market/index.js","presentation/components/Market/Market.template.js","presentation/components/MarketGroup/index.js","presentation/components/MarketGroup/MarketGroup.template.js","presentation/components/MarketGroup/MarketGroup.js","presentation/components/EventsTable/index.js","presentation/components/EventsTable/EventsTable.template.js","presentation/routes/Home/index.js","presentation/routes/Home/Home.js","application/store/index.js","reportWebVitals.js","index.js"],"names":["handleResponse","response","a","ok","json","status","text","error","Error","handleError","console","selectionsSlice","createSlice","name","initialState","reducers","updateSelectionSuccess","state","action","payload","selectionId","getSelectionsSuccess","selectionUpdates","selectionListUpdate","reduce","all","e","selectionName","odds","isActive","actions","marketGroupsSlice","getMarketGroupsSuccess","marketGroupListUpdate","marketTemplateId","filter","marketId","marketsSlice","getMarketsSuccess","marketUpdates","marketListUpdate","marketName","marketStatusIdName","marketStatusName","selections","map","s","eventsSlice","getEventsSuccess","fixtureUpdates","eventListUpdate","fixtureId","sportName","leagueName","fixtureName","fixtureStatusId","fixtureStatusName","markets","m","getEvents","dispatch","fetch","then","catch","fixtures","f","flat","marketGroupConfig","id","label","randomOdds","Math","floor","random","toFixed","Selection","oddsChangeTimeout","undefined","useState","oddsChange","setOddsChange","selection","useSelector","next","prev","setTimeout","useEffect","clearTimeout","useSelection","className","useMarkets","Market","market","MarketGroup","marketGroup","marketGroups","Object","values","useMarketGroup","v","EventsTable","useDispatch","events","oddsChange1","setInterval","oddsChange2","oddsChange3","oddsChange4","clearInterval","useEventsTable","k","split","n","c","Home","configureStore","reducer","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.ce14c930.chunk.js","sourcesContent":["export async function handleResponse(response) {\r\n\tif (response.ok) return response.json();\r\n\tif (response.status === 400) {\r\n\t\t// So, a server-side validation error occurred.\r\n\t\t// Server side validation returns a string error message, so parse as text instead of json.\r\n\t\tconst error = await response.text();\r\n\t\tthrow new Error(error);\r\n\t}\r\n\tthrow new Error(\"Network response was not ok.\");\r\n}\r\n\r\n// In a real app, would likely call an error logging service.\r\nexport function handleError(error) {\r\n\t// eslint-disable-next-line no-console\r\n\tconsole.error(\"API call failed. \" + error);\r\n\tthrow error;\r\n}\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nexport const selectionsSlice = createSlice({\r\n\tname: \"selection\",\r\n\tinitialState: {},\r\n\treducers: {\r\n\t\tupdateSelectionSuccess: (state, action) => {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\t[action.payload.selectionId]: {\r\n\t\t\t\t\t...state[action.payload.selectionId],\r\n\t\t\t\t\t...action.payload,\r\n\t\t\t\t},\r\n\t\t\t};\r\n\t\t},\r\n\t\tgetSelectionsSuccess: (state, action) => {\r\n\t\t\tconst selectionUpdates = selectionListUpdate(action.payload);\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\t...selectionUpdates,\r\n\t\t\t};\r\n\t\t},\r\n\t},\r\n});\r\n\r\nconst selectionListUpdate = (payload) => {\r\n\treturn payload.reduce(\r\n\t\t(all, e) => ({\r\n\t\t\t...all,\r\n\t\t\t[e.selectionId]: {\r\n\t\t\t\tselectionId: e.selectionId,\r\n\t\t\t\tselectionName: e.selectionName,\r\n\t\t\t\todds: e.odds,\r\n\t\t\t\tisActive: e.isActive,\r\n\t\t\t},\r\n\t\t}),\r\n\t\t{}\r\n\t);\r\n};\r\n\r\nexport const { getSelectionsSuccess, updateSelectionSuccess } =\r\n\tselectionsSlice.actions;\r\nexport default selectionsSlice.reducer;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nexport const marketGroupsSlice = createSlice({\r\n\tname: \"marketGroup\",\r\n\tinitialState: {},\r\n\treducers: {\r\n\t\tgetMarketGroupsSuccess: (state, action) => {\r\n\t\t\treturn marketGroupListUpdate(action.payload);\r\n\t\t},\r\n\t},\r\n});\r\n\r\nconst marketGroupListUpdate = (payload) => {\r\n\treturn payload.reduce((all, e) => {\r\n\t\treturn {\r\n\t\t\t...all,\r\n\t\t\t[e.marketTemplateId]: all[e.marketTemplateId]\r\n\t\t\t\t? [\r\n\t\t\t\t\t\t...all[e.marketTemplateId].filter(\r\n\t\t\t\t\t\t\t(a) => a !== e.marketId\r\n\t\t\t\t\t\t),\r\n\t\t\t\t\t\te.marketId,\r\n\t\t\t\t  ]\r\n\t\t\t\t: [e.marketId],\r\n\t\t};\r\n\t}, {});\r\n};\r\n\r\nexport const { getMarketGroupsSuccess } = marketGroupsSlice.actions;\r\nexport default marketGroupsSlice.reducer;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nexport const marketsSlice = createSlice({\r\n\tname: \"market\",\r\n\tinitialState: {},\r\n\treducers: {\r\n\t\tgetMarketsSuccess: (state, action) => {\r\n\t\t\tconst marketUpdates = marketListUpdate(action.payload);\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\t...marketUpdates,\r\n\t\t\t};\r\n\t\t},\r\n\t},\r\n});\r\n\r\nconst marketListUpdate = (payload) => {\r\n\treturn payload.reduce(\r\n\t\t(all, e) => ({\r\n\t\t\t...all,\r\n\t\t\t[e.marketId]: {\r\n\t\t\t\tmarketId: e.marketId,\r\n\t\t\t\tmarketName: e.marketName,\r\n\t\t\t\tmarketStatusIdName: e.marketStatusIdName,\r\n\t\t\t\tmarketStatusName: e.marketStatusName,\r\n\t\t\t\tmarketTemplateId: e.marketTemplateId,\r\n\t\t\t\tselections: e.selections.map((s) => s.selectionId),\r\n\t\t\t},\r\n\t\t}),\r\n\t\t{}\r\n\t);\r\n};\r\n\r\nexport const { getMarketsSuccess } = marketsSlice.actions;\r\nexport default marketsSlice.reducer;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport * as sportsbookApi from \"../../infrastructure/services/api\";\r\nimport { getSelectionsSuccess } from \"./selectionsSlice\";\r\nimport { getMarketGroupsSuccess } from \"./marketGroupsSlice\";\r\nimport { getMarketsSuccess } from \"./marketsSlice\";\r\n\r\nexport const eventsSlice = createSlice({\r\n\tname: \"events\",\r\n\tinitialState: {},\r\n\treducers: {\r\n\t\tgetEventsSuccess: (state, action) => {\r\n\t\t\tconst fixtureUpdates = eventListUpdate(action.payload);\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\t...fixtureUpdates,\r\n\t\t\t};\r\n\t\t},\r\n\t},\r\n});\r\n\r\nconst eventListUpdate = (payload) => {\r\n\treturn payload.reduce(\r\n\t\t(all, e) => ({\r\n\t\t\t...all,\r\n\t\t\t[e.fixtureId]: {\r\n\t\t\t\tfixtureId: e.fixtureId,\r\n\t\t\t\tsportName: e.sportName,\r\n\t\t\t\tleagueName: e.leagueName,\r\n\t\t\t\tfixtureName: e.fixtureName,\r\n\t\t\t\tfixtureStatusId: e.fixtureStatusId,\r\n\t\t\t\tfixtureStatusName: e.fixtureStatusName,\r\n\t\t\t\tmarkets: e.markets.map((m) => m.marketId),\r\n\t\t\t},\r\n\t\t}),\r\n\t\t{}\r\n\t);\r\n};\r\n\r\n// Thunk\r\nexport const getEvents = () => {\r\n\treturn (dispatch) => {\r\n\t\treturn sportsbookApi\r\n\t\t\t.getFixtures()\r\n\t\t\t.then((fixtures) => {\r\n\t\t\t\tdispatch(getEventsSuccess(fixtures));\r\n\t\t\t\tdispatch(\r\n\t\t\t\t\tgetMarketGroupsSuccess(\r\n\t\t\t\t\t\tfixtures.map((f) => f.markets).flat()\r\n\t\t\t\t\t)\r\n\t\t\t\t);\r\n\t\t\t\tdispatch(\r\n\t\t\t\t\tgetMarketsSuccess(fixtures.map((f) => f.markets).flat())\r\n\t\t\t\t);\r\n\r\n\t\t\t\tdispatch(\r\n\t\t\t\t\tgetSelectionsSuccess(\r\n\t\t\t\t\t\tfixtures\r\n\t\t\t\t\t\t\t.map((f) => f.markets)\r\n\t\t\t\t\t\t\t.flat()\r\n\t\t\t\t\t\t\t.map((m) => m.selections)\r\n\t\t\t\t\t\t\t.flat()\r\n\t\t\t\t\t)\r\n\t\t\t\t);\r\n\r\n\t\t\t\t// dispatch(\r\n\t\t\t\t// \tgetSelectionsSuccess({\r\n\t\t\t\t// \t\t1: { label: \"Team A\", odds: 1.65, status: \"Open\" },\r\n\t\t\t\t// \t\t2: { label: \"Draw\", odds: 2.45, status: \"Open\" },\r\n\t\t\t\t// \t\t3: { label: \"Team B\", odds: 12.5, status: \"Open\" },\r\n\t\t\t\t// \t})\r\n\t\t\t\t// );\r\n\t\t\t})\r\n\t\t\t.catch((error) => {\r\n\t\t\t\tthrow error;\r\n\t\t\t});\r\n\t};\r\n};\r\n\r\nexport const { getEventsSuccess } = eventsSlice.actions;\r\nexport default eventsSlice.reducer;\r\n","import { handleResponse, handleError } from \"./api.utils\";\r\nconst url = \"https://pocapi.song88.com/api/v1/fixtures\";\r\n\r\nexport function getFixtures() {\r\n\treturn fetch(url).then(handleResponse).catch(handleError);\r\n}\r\n","const marketGroupConfig = [\r\n\t{ id: 1, label: \"Match Winner\" },\r\n\t{ id: 90, label: \"2nd Half - Total\" },\r\n\t{ id: 18, label: \"Total\" },\r\n\t{ id: 16, label: \"Handicap\" },\r\n];\r\n\r\nexport default marketGroupConfig;\r\n","import { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getEvents } from \"../../../application/store/eventsSlice\";\r\nimport { updateSelectionSuccess } from \"../../../application/store/selectionsSlice\";\r\nimport marketGroupConfig from \"../../config/marketGroup.config\";\r\n\r\nconst useEvents = (num) => new Array(num).fill(null);\r\n\r\nconst randomOdds = () => {\r\n\tconst precision = 100;\r\n\tconst random =\r\n\t\tMath.floor(\r\n\t\t\tMath.random() * (10 * precision - 1 * precision) + 1 * precision\r\n\t\t) /\r\n\t\t(1 * precision);\r\n\r\n\treturn random.toFixed(2);\r\n};\r\n\r\nconst useEventsTable = () => {\r\n\tconst dispatch = useDispatch();\r\n\tconst events = useSelector((state) => state.events);\r\n\r\n\tuseEffect(() => {\r\n\t\tdispatch(getEvents());\r\n\r\n\t\tconst oddsChange1 = setInterval(() => {\r\n\t\t\tdispatch(\r\n\t\t\t\tupdateSelectionSuccess({\r\n\t\t\t\t\tselectionId: \"28067828:1::1\",\r\n\t\t\t\t\todds: randomOdds(),\r\n\t\t\t\t})\r\n\t\t\t);\r\n\t\t}, 3000);\r\n\r\n\t\tconst oddsChange2 = setInterval(() => {\r\n\t\t\tdispatch(\r\n\t\t\t\tupdateSelectionSuccess({\r\n\t\t\t\t\tselectionId: \"28067828:90:total=1.5:12\",\r\n\t\t\t\t\todds: randomOdds(),\r\n\t\t\t\t})\r\n\t\t\t);\r\n\t\t}, 5000);\r\n\r\n\t\tconst oddsChange3 = setInterval(() => {\r\n\t\t\tdispatch(\r\n\t\t\t\tupdateSelectionSuccess({\r\n\t\t\t\t\tselectionId: \"28067828:18:total=4:12\",\r\n\t\t\t\t\todds: randomOdds(),\r\n\t\t\t\t})\r\n\t\t\t);\r\n\t\t}, 7000);\r\n\r\n\t\tconst oddsChange4 = setInterval(() => {\r\n\t\t\tdispatch(\r\n\t\t\t\tupdateSelectionSuccess({\r\n\t\t\t\t\tselectionId: \"28067828:18:total=2.5:13\",\r\n\t\t\t\t\todds: randomOdds(),\r\n\t\t\t\t})\r\n\t\t\t);\r\n\t\t}, 9000);\r\n\r\n\t\treturn () => {\r\n\t\t\tclearInterval(oddsChange1);\r\n\t\t\tclearInterval(oddsChange2);\r\n\t\t\tclearInterval(oddsChange3);\r\n\t\t\tclearInterval(oddsChange4);\r\n\t\t};\r\n\t}, [dispatch]);\r\n\r\n\treturn {\r\n\t\tevents: Object.values(events),\r\n\t\tmarketGroupConfig,\r\n\t};\r\n};\r\n\r\nexport { useEvents, useEventsTable };\r\n","import Selection from \"./Selection.template\";\r\n\r\nexport default Selection;\r\n","import { useSelection } from \"./Selection\";\r\nimport \"./Selection.css\";\r\n\r\nconst Selection = ({ id }) => {\r\n\tconst { oddsChange, selection } = useSelection(id);\r\n\r\n\treturn (\r\n\t\t<div className={\"selection \" + oddsChange}>\r\n\t\t\t<div className=\"selection-label\">{selection?.selectionName}</div>\r\n\t\t\t<div className=\"odds\">{selection?.odds}</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Selection;\r\n","import { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst useSelection = (id) => {\r\n\tlet oddsChangeTimeout = undefined;\r\n\tconst [oddsChange, setOddsChange] = useState(\"Same\");\r\n\tconst selection = useSelector(\r\n\t\t(state) => state.selections[id],\r\n\t\t(next, prev) => {\r\n\t\t\tif (prev.odds > next.odds) {\r\n\t\t\t\tsetOddsChange(\"down\");\r\n\t\t\t} else if (prev.odds < next.odds) {\r\n\t\t\t\tsetOddsChange(\"up\");\r\n\t\t\t}\r\n\r\n\t\t\toddsChangeTimeout = setTimeout(() => {\r\n\t\t\t\tsetOddsChange(\"Same\");\r\n\t\t\t}, 500);\r\n\r\n\t\t\treturn prev.odds === next.odds;\r\n\t\t}\r\n\t);\r\n\r\n\tuseEffect(() => {\r\n\t\treturn () => {\r\n\t\t\tclearTimeout(oddsChangeTimeout);\r\n\t\t};\r\n\t});\r\n\r\n\treturn {\r\n\t\toddsChange,\r\n\t\tselection,\r\n\t};\r\n};\r\n\r\nexport { useSelection };\r\n","import { useSelector } from \"react-redux\";\r\n\r\nconst useMarkets = (id) => {\r\n\tconst market = useSelector((state) => state.markets);\r\n\r\n\treturn market[id];\r\n};\r\n\r\nexport default useMarkets;\r\n","import Market from \"./Market.template\";\r\n\r\nexport default Market;\r\n","import Selection from \"../Selection\";\r\nimport useMarkets from \"./Market\";\r\nimport \"./Market.css\";\r\n\r\nconst Market = ({ id }) => {\r\n\tconst market = useMarkets(id);\r\n\r\n\treturn (\r\n\t\t<div className=\"market\">\r\n\t\t\t<div className=\"selection-list\">\r\n\t\t\t\t{market?.selections.map((s) => (\r\n\t\t\t\t\t<Selection id={s} key={s} />\r\n\t\t\t\t))}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Market;\r\n","import MarketGroup from \"./MarketGroup.template\";\r\n\r\nexport default MarketGroup;\r\n","import \"./MarketGroup.css\";\r\nimport Market from \"../Market\";\r\nimport { useMarketGroup } from \"./MarketGroup\";\r\n\r\nconst MarketGroup = ({ id, label }) => {\r\n\tconst markets = useMarketGroup(id);\r\n\r\n\treturn (\r\n\t\t<div className=\"market-group\">\r\n\t\t\t<div className=\"market-group-header\">{label}</div>\r\n\t\t\t{markets.map((v) => (\r\n\t\t\t\t<Market id={v} key={v} />\r\n\t\t\t))}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default MarketGroup;\r\n","import { useSelector } from \"react-redux\";\r\n\r\nconst useMarketGroup = (id) => {\r\n\tconst marketGroup = useSelector((state) => state.marketGroups);\r\n\r\n\treturn marketGroup && marketGroup[id] ? Object.values(marketGroup[id]) : [];\r\n};\r\n\r\nexport { useMarketGroup };\r\n","import EventsTable from \"./EventsTable.template\";\r\n\r\nexport default EventsTable;\r\n","import \"./EventsTable.css\";\r\nimport { useEventsTable } from \"./EventsTable\";\r\nimport MarketGroup from \"../MarketGroup\";\r\n\r\nconst EventsTable = () => {\r\n\t// const events = useEvents(20);\r\n\tconst { events, marketGroupConfig } = useEventsTable();\r\n\r\n\treturn (\r\n\t\t<div className=\"events-table\">\r\n\t\t\t<div className=\"header\">Football</div>\r\n\t\t\t<div className=\"event-list\">\r\n\t\t\t\t{events.map((v, k) => (\r\n\t\t\t\t\t<div className=\"event\" key={k}>\r\n\t\t\t\t\t\t<div className=\"event-info\">\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t{k} {v.sportName}/{v.leagueName}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t{v.fixtureName.split(\" vs. \").map((n) => (\r\n\t\t\t\t\t\t\t\t<div key={n}>{n}</div>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t{marketGroupConfig.map((c) => (\r\n\t\t\t\t\t\t\t<MarketGroup key={c.id} label={c.label} id={c.id} />\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t))}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default EventsTable;\r\n","import Home from \"./Home\";\r\nimport test from \"./Home.hook\";\r\n\r\nexport { test };\r\nexport default Home;\r\n","import EventsTable from \"../../components/EventsTable\";\r\n\r\nconst Home = () => {\r\n\treturn <EventsTable />;\r\n};\r\n\r\nexport default Home;\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport eventsSlice from \"./eventsSlice\";\r\nimport marketGroupsSlice from \"./marketGroupsSlice\";\r\nimport marketsSlice from \"./marketsSlice\";\r\nimport selectionsSlice from \"./selectionsSlice\";\r\n\r\nexport default configureStore({\r\n\treducer: {\r\n\t\tselections: selectionsSlice,\r\n\t\tevents: eventsSlice,\r\n\t\tmarketGroups: marketGroupsSlice,\r\n\t\tmarkets: marketsSlice,\r\n\t},\r\n});\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport Home from \"./presentation/routes/Home\";\nimport store from \"./application/store\";\nimport { Provider } from \"react-redux\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<Provider store={store}>\n\t\t\t<Home />\n\t\t</Provider>\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}